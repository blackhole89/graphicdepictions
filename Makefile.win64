#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = x86_64-w64-mingw32-gcc
CXX = x86_64-w64-mingw32-g++
AR = x86_64-w64-mingw32-ar
LD = x86_64-w64-mingw32-g++
WINDRES = windres

INC = -I/usr/i686-w64-mingw32/include 
CFLAGS = -std=c++14 -I/usr/include/freetype2
RESINC = 
LIBDIR = 
LIB = -lpthread libfreetype-6.dll libv8.dll -lopengl32 -lglu32 -lgdi32 -lcomdlg32
LDFLAGS = -Wl,--enable-stdcall-fixup 

INC_DEBUG_WIN32 = $(INC)
CFLAGS_DEBUG_WIN32 = $(CFLAGS) -std=c++14 -pg -g -W -O0 -I/usr/include/freetype2 -Iv8/ -D_DEBUG -D_WINDOWS -DWIN32
RESINC_DEBUG_WIN32 = $(RESINC)
RCFLAGS_DEBUG_WIN32 = $(RCFLAGS)
LIBDIR_DEBUG_WIN32 = $(LIBDIR)
LIB_DEBUG_WIN32 = $(LIB) libfreetype.a 
LDFLAGS_DEBUG_WIN32 = $(LDFLAGS) -pg
OBJDIR_DEBUG_WIN32 = Debug.win
DEP_DEBUG_WIN32 = 
OUT_DEBUG_WIN32 = Debug.win/gdepictions.exe

INC_RELEASE_WIN32 = $(INC)
CFLAGS_RELEASE_WIN32 = $(CFLAGS) -std=c++14 -g -W -O2 -I/usr/include/freetype2 -Iv8/ -DNDEBUG -D_WINDOWS -DWIN32
RESINC_RELEASE_WIN32 = $(RESINC)
RCFLAGS_RELEASE_WIN32 = $(RCFLAGS)
LIBDIR_RELEASE_WIN32 = $(LIBDIR)
LIB_RELEASE_WIN32 = $(LIB) libfreetype.a 
LDFLAGS_RELEASE_WIN32 = $(LDFLAGS)
OBJDIR_RELEASE_WIN32 = Release.win
DEP_RELEASE_WIN32 = 
OUT_RELEASE_WIN32 = Release.win/gdepictions.exe

OBJ_DEBUG_WIN32 = $(OBJDIR_DEBUG_WIN32)/state.o $(OBJDIR_DEBUG_WIN32)/singletons.o $(OBJDIR_DEBUG_WIN32)/space.o $(OBJDIR_DEBUG_WIN32)/stdafx.o $(OBJDIR_DEBUG_WIN32)/texpool.o $(OBJDIR_DEBUG_WIN32)/texture.o $(OBJDIR_DEBUG_WIN32)/win32window.o $(OBJDIR_DEBUG_WIN32)/engine.o $(OBJDIR_DEBUG_WIN32)/export.o $(OBJDIR_DEBUG_WIN32)/file.o $(OBJDIR_DEBUG_WIN32)/fonts.o $(OBJDIR_DEBUG_WIN32)/graphics.o $(OBJDIR_DEBUG_WIN32)/imgui/imgui.o $(OBJDIR_DEBUG_WIN32)/imgui/imgui_demo.o $(OBJDIR_DEBUG_WIN32)/imgui/imgui_draw.o $(OBJDIR_DEBUG_WIN32)/imgui/imgui_freetype.o $(OBJDIR_DEBUG_WIN32)/imgui/imgui_impl_glfw.o

OBJ_RELEASE_WIN32 = $(OBJDIR_RELEASE_WIN32)/state.o $(OBJDIR_RELEASE_WIN32)/singletons.o $(OBJDIR_RELEASE_WIN32)/space.o $(OBJDIR_RELEASE_WIN32)/stdafx.o $(OBJDIR_RELEASE_WIN32)/texpool.o $(OBJDIR_RELEASE_WIN32)/texture.o $(OBJDIR_RELEASE_WIN32)/win32window.o $(OBJDIR_RELEASE_WIN32)/engine.o $(OBJDIR_RELEASE_WIN32)/export.o $(OBJDIR_RELEASE_WIN32)/file.o $(OBJDIR_RELEASE_WIN32)/fonts.o $(OBJDIR_RELEASE_WIN32)/graphics.o $(OBJDIR_RELEASE_WIN32)/imgui/imgui.o $(OBJDIR_RELEASE_WIN32)/imgui/imgui_demo.o $(OBJDIR_RELEASE_WIN32)/imgui/imgui_draw.o $(OBJDIR_RELEASE_WIN32)/imgui/imgui_freetype.o $(OBJDIR_RELEASE_WIN32)/imgui/imgui_impl_glfw.o

all: debug_win32 release_win32

clean: clean_debug_win32 clean_release_win32

before_debug_win32: 
	test -d Debug.win || mkdir -p Debug.win
	test -d $(OBJDIR_DEBUG_WIN32) || mkdir -p $(OBJDIR_DEBUG_WIN32)
	test -d $(OBJDIR_DEBUG_WIN32)/imgui || mkdir -p $(OBJDIR_DEBUG_WIN32)/imgui

after_debug_win32: 

debug_win32: before_debug_win32 out_debug_win32 after_debug_win32

out_debug_win32: before_debug_win32 $(OBJ_DEBUG_WIN32) $(DEP_DEBUG_WIN32)
	$(LD) $(LIBDIR_DEBUG_WIN32) -o $(OUT_DEBUG_WIN32) $(OBJ_DEBUG_WIN32)  $(LDFLAGS_DEBUG_WIN32) $(LIB_DEBUG_WIN32)

$(OBJDIR_DEBUG_WIN32)/state.o: state.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c state.cpp -o $(OBJDIR_DEBUG_WIN32)/state.o

$(OBJDIR_DEBUG_WIN32)/singletons.o: singletons.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c singletons.cpp -o $(OBJDIR_DEBUG_WIN32)/singletons.o

$(OBJDIR_DEBUG_WIN32)/sound.o: sound.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c sound.cpp -o $(OBJDIR_DEBUG_WIN32)/sound.o

$(OBJDIR_DEBUG_WIN32)/space.o: space.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c space.cpp -o $(OBJDIR_DEBUG_WIN32)/space.o

$(OBJDIR_DEBUG_WIN32)/stdafx.o: stdafx.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c stdafx.cpp -o $(OBJDIR_DEBUG_WIN32)/stdafx.o

$(OBJDIR_DEBUG_WIN32)/texpool.o: texpool.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c texpool.cpp -o $(OBJDIR_DEBUG_WIN32)/texpool.o

$(OBJDIR_DEBUG_WIN32)/texture.o: texture.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c texture.cpp -o $(OBJDIR_DEBUG_WIN32)/texture.o

$(OBJDIR_DEBUG_WIN32)/ui.o: ui.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c ui.cpp -o $(OBJDIR_DEBUG_WIN32)/ui.o

$(OBJDIR_DEBUG_WIN32)/win32window.o: win32window.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c win32window.cpp -o $(OBJDIR_DEBUG_WIN32)/win32window.o

$(OBJDIR_DEBUG_WIN32)/engine.o: engine.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c engine.cpp -o $(OBJDIR_DEBUG_WIN32)/engine.o

$(OBJDIR_DEBUG_WIN32)/export.o: export.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c export.cpp -o $(OBJDIR_DEBUG_WIN32)/export.o

$(OBJDIR_DEBUG_WIN32)/file.o: file.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c file.cpp -o $(OBJDIR_DEBUG_WIN32)/file.o

$(OBJDIR_DEBUG_WIN32)/fonts.o: fonts.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c fonts.cpp -o $(OBJDIR_DEBUG_WIN32)/fonts.o

$(OBJDIR_DEBUG_WIN32)/graphics.o: graphics.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c graphics.cpp -o $(OBJDIR_DEBUG_WIN32)/graphics.o

$(OBJDIR_DEBUG_WIN32)/imgui/imgui.o: imgui/imgui.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c imgui/imgui.cpp -o $(OBJDIR_DEBUG_WIN32)/imgui/imgui.o

$(OBJDIR_DEBUG_WIN32)/imgui/imgui_demo.o: imgui/imgui_demo.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c imgui/imgui_demo.cpp -o $(OBJDIR_DEBUG_WIN32)/imgui/imgui_demo.o

$(OBJDIR_DEBUG_WIN32)/imgui/imgui_draw.o: imgui/imgui_draw.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c imgui/imgui_draw.cpp -o $(OBJDIR_DEBUG_WIN32)/imgui/imgui_draw.o

$(OBJDIR_DEBUG_WIN32)/imgui/imgui_freetype.o: imgui/imgui_freetype.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c imgui/imgui_freetype.cpp -o $(OBJDIR_DEBUG_WIN32)/imgui/imgui_freetype.o

$(OBJDIR_DEBUG_WIN32)/imgui/imgui_impl_glfw.o: imgui/imgui_impl_glfw.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c imgui/imgui_impl_glfw.cpp -o $(OBJDIR_DEBUG_WIN32)/imgui/imgui_impl_glfw.o

clean_debug_win32: 
	rm -f $(OBJ_DEBUG_WIN32) $(OUT_DEBUG_WIN32)
	rm -rf Debug.win
	rm -rf $(OBJDIR_DEBUG_WIN32)
	rm -rf $(OBJDIR_DEBUG_WIN32)/imgui

before_release_win32: 
	test -d Release.win || mkdir -p Release.win
	test -d $(OBJDIR_RELEASE_WIN32) || mkdir -p $(OBJDIR_RELEASE_WIN32)
	test -d $(OBJDIR_RELEASE_WIN32)/imgui || mkdir -p $(OBJDIR_RELEASE_WIN32)/imgui

after_release_win32: 

release_win32: before_release_win32 out_release_win32 after_release_win32

out_release_win32: before_release_win32 $(OBJ_RELEASE_WIN32) $(DEP_RELEASE_WIN32)
	$(LD) $(LIBDIR_RELEASE_WIN32) -o $(OUT_RELEASE_WIN32) $(OBJ_RELEASE_WIN32)  $(LDFLAGS_RELEASE_WIN32) $(LIB_RELEASE_WIN32)

$(OBJDIR_RELEASE_WIN32)/state.o: state.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c state.cpp -o $(OBJDIR_RELEASE_WIN32)/state.o

$(OBJDIR_RELEASE_WIN32)/singletons.o: singletons.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c singletons.cpp -o $(OBJDIR_RELEASE_WIN32)/singletons.o

$(OBJDIR_RELEASE_WIN32)/sound.o: sound.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c sound.cpp -o $(OBJDIR_RELEASE_WIN32)/sound.o

$(OBJDIR_RELEASE_WIN32)/space.o: space.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c space.cpp -o $(OBJDIR_RELEASE_WIN32)/space.o

$(OBJDIR_RELEASE_WIN32)/stdafx.o: stdafx.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c stdafx.cpp -o $(OBJDIR_RELEASE_WIN32)/stdafx.o

$(OBJDIR_RELEASE_WIN32)/texpool.o: texpool.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c texpool.cpp -o $(OBJDIR_RELEASE_WIN32)/texpool.o

$(OBJDIR_RELEASE_WIN32)/texture.o: texture.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c texture.cpp -o $(OBJDIR_RELEASE_WIN32)/texture.o

$(OBJDIR_RELEASE_WIN32)/ui.o: ui.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c ui.cpp -o $(OBJDIR_RELEASE_WIN32)/ui.o

$(OBJDIR_RELEASE_WIN32)/win32window.o: win32window.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c win32window.cpp -o $(OBJDIR_RELEASE_WIN32)/win32window.o

$(OBJDIR_RELEASE_WIN32)/engine.o: engine.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c engine.cpp -o $(OBJDIR_RELEASE_WIN32)/engine.o

$(OBJDIR_RELEASE_WIN32)/export.o: export.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c export.cpp -o $(OBJDIR_RELEASE_WIN32)/export.o

$(OBJDIR_RELEASE_WIN32)/file.o: file.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c file.cpp -o $(OBJDIR_RELEASE_WIN32)/file.o

$(OBJDIR_RELEASE_WIN32)/fonts.o: fonts.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c fonts.cpp -o $(OBJDIR_RELEASE_WIN32)/fonts.o

$(OBJDIR_RELEASE_WIN32)/graphics.o: graphics.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c graphics.cpp -o $(OBJDIR_RELEASE_WIN32)/graphics.o

$(OBJDIR_RELEASE_WIN32)/imgui/imgui.o: imgui/imgui.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c imgui/imgui.cpp -o $(OBJDIR_RELEASE_WIN32)/imgui/imgui.o

$(OBJDIR_RELEASE_WIN32)/imgui/imgui_demo.o: imgui/imgui_demo.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c imgui/imgui_demo.cpp -o $(OBJDIR_RELEASE_WIN32)/imgui/imgui_demo.o

$(OBJDIR_RELEASE_WIN32)/imgui/imgui_draw.o: imgui/imgui_draw.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c imgui/imgui_draw.cpp -o $(OBJDIR_RELEASE_WIN32)/imgui/imgui_draw.o

$(OBJDIR_RELEASE_WIN32)/imgui/imgui_freetype.o: imgui/imgui_freetype.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c imgui/imgui_freetype.cpp -o $(OBJDIR_RELEASE_WIN32)/imgui/imgui_freetype.o

$(OBJDIR_RELEASE_WIN32)/imgui/imgui_impl_glfw.o: imgui/imgui_impl_glfw.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c imgui/imgui_impl_glfw.cpp -o $(OBJDIR_RELEASE_WIN32)/imgui/imgui_impl_glfw.o

clean_release_win32: 
	rm -f $(OBJ_RELEASE_WIN32) $(OUT_RELEASE_WIN32)
	rm -rf Release.win
	rm -rf $(OBJDIR_RELEASE_WIN32)
	rm -rf $(OBJDIR_RELEASE_WIN32)/imgui

.PHONY: before_debug_win32 after_debug_win32 clean_debug_win32 before_release_win32 after_release_win32 clean_release_win32

